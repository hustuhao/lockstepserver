// pb/snake/snake.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: pb/snake/snake.proto

package snake

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 贪吃蛇移动方向
type SnakeDirection int32

const (
	SnakeDirection_UP    SnakeDirection = 0
	SnakeDirection_DOWN  SnakeDirection = 1
	SnakeDirection_LEFT  SnakeDirection = 2
	SnakeDirection_RIGHT SnakeDirection = 3
)

// Enum value maps for SnakeDirection.
var (
	SnakeDirection_name = map[int32]string{
		0: "UP",
		1: "DOWN",
		2: "LEFT",
		3: "RIGHT",
	}
	SnakeDirection_value = map[string]int32{
		"UP":    0,
		"DOWN":  1,
		"LEFT":  2,
		"RIGHT": 3,
	}
)

func (x SnakeDirection) Enum() *SnakeDirection {
	p := new(SnakeDirection)
	*p = x
	return p
}

func (x SnakeDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SnakeDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_snake_snake_proto_enumTypes[0].Descriptor()
}

func (SnakeDirection) Type() protoreflect.EnumType {
	return &file_pb_snake_snake_proto_enumTypes[0]
}

func (x SnakeDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SnakeDirection.Descriptor instead.
func (SnakeDirection) EnumDescriptor() ([]byte, []int) {
	return file_pb_snake_snake_proto_rawDescGZIP(), []int{0}
}

// 消息ID
type ID int32

const (
	ID_ID_MSG_BEGIN      ID = 0
	ID_ID_MSG_SnakeInput ID = 1 // 贪吃蛇操作输入
	ID_ID_MSG_SnakeFrame ID = 2 // 贪吃蛇帧数据
	ID_ID_MSG_END        ID = 255
)

// Enum value maps for ID.
var (
	ID_name = map[int32]string{
		0:   "ID_MSG_BEGIN",
		1:   "ID_MSG_SnakeInput",
		2:   "ID_MSG_SnakeFrame",
		255: "ID_MSG_END",
	}
	ID_value = map[string]int32{
		"ID_MSG_BEGIN":      0,
		"ID_MSG_SnakeInput": 1,
		"ID_MSG_SnakeFrame": 2,
		"ID_MSG_END":        255,
	}
)

func (x ID) Enum() *ID {
	p := new(ID)
	*p = x
	return p
}

func (x ID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ID) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_snake_snake_proto_enumTypes[1].Descriptor()
}

func (ID) Type() protoreflect.EnumType {
	return &file_pb_snake_snake_proto_enumTypes[1]
}

func (x ID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ID.Descriptor instead.
func (ID) EnumDescriptor() ([]byte, []int) {
	return file_pb_snake_snake_proto_rawDescGZIP(), []int{1}
}

// 客户端发送的贪吃蛇操作输入消息
type C2S_SnakeInputMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction SnakeDirection `protobuf:"varint,1,opt,name=direction,proto3,enum=pb.snake.SnakeDirection" json:"direction,omitempty"` // 蛇的移动方向
}

func (x *C2S_SnakeInputMsg) Reset() {
	*x = C2S_SnakeInputMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_snake_snake_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SnakeInputMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SnakeInputMsg) ProtoMessage() {}

func (x *C2S_SnakeInputMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_snake_snake_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SnakeInputMsg.ProtoReflect.Descriptor instead.
func (*C2S_SnakeInputMsg) Descriptor() ([]byte, []int) {
	return file_pb_snake_snake_proto_rawDescGZIP(), []int{0}
}

func (x *C2S_SnakeInputMsg) GetDirection() SnakeDirection {
	if x != nil {
		return x.Direction
	}
	return SnakeDirection_UP
}

// 蛇的状态
type SnakeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            // 蛇的ID
	Positions []int32        `protobuf:"varint,2,rep,packed,name=positions,proto3" json:"positions,omitempty"`                       // 蛇的身体位置
	Direction SnakeDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=pb.snake.SnakeDirection" json:"direction,omitempty"` // 蛇的移动方向
}

func (x *SnakeState) Reset() {
	*x = SnakeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_snake_snake_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnakeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnakeState) ProtoMessage() {}

func (x *SnakeState) ProtoReflect() protoreflect.Message {
	mi := &file_pb_snake_snake_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnakeState.ProtoReflect.Descriptor instead.
func (*SnakeState) Descriptor() ([]byte, []int) {
	return file_pb_snake_snake_proto_rawDescGZIP(), []int{1}
}

func (x *SnakeState) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SnakeState) GetPositions() []int32 {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *SnakeState) GetDirection() SnakeDirection {
	if x != nil {
		return x.Direction
	}
	return SnakeDirection_UP
}

// 食物的状态
type FoodState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"` // 食物的x坐标
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"` // 食物的y坐标
}

func (x *FoodState) Reset() {
	*x = FoodState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_snake_snake_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoodState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoodState) ProtoMessage() {}

func (x *FoodState) ProtoReflect() protoreflect.Message {
	mi := &file_pb_snake_snake_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoodState.ProtoReflect.Descriptor instead.
func (*FoodState) Descriptor() ([]byte, []int) {
	return file_pb_snake_snake_proto_rawDescGZIP(), []int{2}
}

func (x *FoodState) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *FoodState) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// 服务端广播的贪吃蛇帧数据
type S2C_SnakeFrameMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameId uint32        `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"` // 帧ID
	Snakes  []*SnakeState `protobuf:"bytes,2,rep,name=snakes,proto3" json:"snakes,omitempty"`                   // 所有蛇的状态
	Foods   []*FoodState  `protobuf:"bytes,3,rep,name=foods,proto3" json:"foods,omitempty"`                     // 所有食物的状态
}

func (x *S2C_SnakeFrameMsg) Reset() {
	*x = S2C_SnakeFrameMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_snake_snake_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_SnakeFrameMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_SnakeFrameMsg) ProtoMessage() {}

func (x *S2C_SnakeFrameMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_snake_snake_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_SnakeFrameMsg.ProtoReflect.Descriptor instead.
func (*S2C_SnakeFrameMsg) Descriptor() ([]byte, []int) {
	return file_pb_snake_snake_proto_rawDescGZIP(), []int{3}
}

func (x *S2C_SnakeFrameMsg) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *S2C_SnakeFrameMsg) GetSnakes() []*SnakeState {
	if x != nil {
		return x.Snakes
	}
	return nil
}

func (x *S2C_SnakeFrameMsg) GetFoods() []*FoodState {
	if x != nil {
		return x.Foods
	}
	return nil
}

var File_pb_snake_snake_proto protoreflect.FileDescriptor

var file_pb_snake_snake_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x62, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2f, 0x73, 0x6e, 0x61, 0x6b, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x62, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65,
	0x22, 0x4b, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x2e, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a,
	0x0a, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2e, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x27, 0x0a, 0x09, 0x46, 0x6f, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x53,
	0x32, 0x43, 0x5f, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x2e, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x06, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x66, 0x6f, 0x6f,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x66,
	0x6f, 0x6f, 0x64, 0x73, 0x2a, 0x37, 0x0a, 0x0e, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x55, 0x50, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x03, 0x2a, 0x55, 0x0a,
	0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x45,
	0x47, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x5f,
	0x53, 0x6e, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x49, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x49, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x4e,
	0x44, 0x10, 0xff, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x68, 0x75, 0x73, 0x74, 0x75, 0x68, 0x61, 0x6f, 0x2f, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x74, 0x65, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x6e,
	0x61, 0x6b, 0x65, 0x3b, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pb_snake_snake_proto_rawDescOnce sync.Once
	file_pb_snake_snake_proto_rawDescData = file_pb_snake_snake_proto_rawDesc
)

func file_pb_snake_snake_proto_rawDescGZIP() []byte {
	file_pb_snake_snake_proto_rawDescOnce.Do(func() {
		file_pb_snake_snake_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_snake_snake_proto_rawDescData)
	})
	return file_pb_snake_snake_proto_rawDescData
}

var file_pb_snake_snake_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pb_snake_snake_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pb_snake_snake_proto_goTypes = []interface{}{
	(SnakeDirection)(0),       // 0: pb.snake.SnakeDirection
	(ID)(0),                   // 1: pb.snake.ID
	(*C2S_SnakeInputMsg)(nil), // 2: pb.snake.C2S_SnakeInputMsg
	(*SnakeState)(nil),        // 3: pb.snake.SnakeState
	(*FoodState)(nil),         // 4: pb.snake.FoodState
	(*S2C_SnakeFrameMsg)(nil), // 5: pb.snake.S2C_SnakeFrameMsg
}
var file_pb_snake_snake_proto_depIdxs = []int32{
	0, // 0: pb.snake.C2S_SnakeInputMsg.direction:type_name -> pb.snake.SnakeDirection
	0, // 1: pb.snake.SnakeState.direction:type_name -> pb.snake.SnakeDirection
	3, // 2: pb.snake.S2C_SnakeFrameMsg.snakes:type_name -> pb.snake.SnakeState
	4, // 3: pb.snake.S2C_SnakeFrameMsg.foods:type_name -> pb.snake.FoodState
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pb_snake_snake_proto_init() }
func file_pb_snake_snake_proto_init() {
	if File_pb_snake_snake_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_snake_snake_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SnakeInputMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_snake_snake_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnakeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_snake_snake_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoodState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_snake_snake_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_SnakeFrameMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_snake_snake_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_snake_snake_proto_goTypes,
		DependencyIndexes: file_pb_snake_snake_proto_depIdxs,
		EnumInfos:         file_pb_snake_snake_proto_enumTypes,
		MessageInfos:      file_pb_snake_snake_proto_msgTypes,
	}.Build()
	File_pb_snake_snake_proto = out.File
	file_pb_snake_snake_proto_rawDesc = nil
	file_pb_snake_snake_proto_goTypes = nil
	file_pb_snake_snake_proto_depIdxs = nil
}
